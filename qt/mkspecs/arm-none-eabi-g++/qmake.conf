#-----------------------------------------------------------------------------
# qmake configuration for building with arm-linux-gnueabi-g++
#


MAKEFILE_GENERATOR      = UNIX
TARGET_PLATFORM         =
TEMPLATE                = app
CONFIG                  += warn_on release incremental
CONFIG			-= qt
QT                      += core gui
QMAKE_INCREMENTAL_STYLE = sublib
QT_ARCH			= arm-none-eabi

TOOL_CHAIN		= arm-none-eabi

#include(linux.conf)
# include(../common/gcc-base-unix.conf)
# include(../common/g++-unix.conf)

# modifications to g++.conf
QMAKE_CC                = $${TOOL_CHAIN}-gcc
QMAKE_LD                = $${TOOL_CHAIN}-ld
QMAKE_CXX               = $${TOOL_CHAIN}-g++
QMAKE_LINK              = $${TOOL_CHAIN}-g++
QMAKE_LINK_SHLIB        = $${TOOL_CHAIN}-g++

# modifications to linux.conf
QMAKE_AR                = $${TOOL_CHAIN}-ar cqs
QMAKE_OBJCOPY           = $${TOOL_CHAIN}-objcopy
QMAKE_OBJDUMP           = $${TOOL_CHAIN}-objdump
QMAKE_STRIP             = $${TOOL_CHAIN}-strip
QMAKE_NM                = $${TOOL_CHAIN}-nm

LINKER_SCRIPT		= /home/fluxx/code/RootControl/qt/mkspecs/arm-none-eabi-g++/linker_script.ld


CDEFS			+= -DUSE_STDPERIPH_DRIVER \
			  -DSTM32F4XX \
			  -DMANGUSTA_DISCOVERY \
			  -DUSE_USB_OTG_FS \
                          -DHSE_VALUE=8000000 \

MCUFLAGS		= -march=armv7e-m -mcpu=cortex-m4 -mfloat-abi=soft -mthumb

COMMONFLAGS		= -Os -g3 $$MCUFLAGS -I$$SYSROOT/include -I$$SYSROOT/include/stm -Wl,-static -fdata-sections -ffunction-sections -Wl,--gc-sections
COMMONFLAGS		+= -Wa,-mthumb,-mfloat-abi=soft,-march=armv7-a
# COMMONFLAGS		+= -nostartfiles -nostdlib
# COMMONFLAGS		= -O2 -g2 $$MCUFLAGS -I$$SYSROOT/include -I$$SYSROOT/include/stm -Wl,-static -fdata-sections -ffunction-sections -Wl,--gc-sections

PIC               =

LINKER_SCRIPT_ARGUMENT	= -Wl,--gc-sections,-L/usr/share/qt4/mkspecs/stm32,-T$$LINKER_SCRIPT
QMAKE_CFLAGS		= $$COMMONFLAGS -fno-exceptions -ffunction-sections -fdata-sections \
                          $$LINKER_SCRIPT_ARGUMENT $$CDEFS \
		          -Wl,-L/opt/tcb/arm-hardfloat-eabi/sysroot/usr/arm-hardfloat-eabi/lib \
			  -save-temps \
           $$PIC \
           -I$$SYSROOT/include/stm

hex.commands = \
               $${QMAKE_NM} $(TARGET) > $(TARGET).list && \
               $${QMAKE_OBJCOPY} -O ihex $(OBJCOPY_ARGS) $(TARGET) $(TARGET).hex && \
               $${QMAKE_OBJCOPY} -O binary $(TARGET) $(TARGET).bin && \
               mkdir -p ${HOME}/.openobc && \
               cp $(TARGET).bin ${HOME}/.openobc/binary


QMAKE_EXTRA_TARGETS += hex


QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
QMAKE_CPPFLAGS		= blah blah blah -I$$SYSROOT/include/ -I$$SYSROOT/include/stm
QMAKE_CPP_FLAGS		= blah blah blah -I/opt/tcb/arm-hardfloat-eabi/sysroot/usr/arm-hardfloat-eabi/include/
QMAKE_LDFLAGS		= --gc-sections -T$$LINKER_SCRIPT ddd -L/opt/tcb/arm-hardfloat-eabi/sysroot/usr/arm-hardfloat-eabi/lib $$PIC $$MCUFLAGS
#  -nostdlib   ,-nostdlib
# QMAKE_ASFLAGS		= $$QMAKE_CFLAGS
# 		          -nostartfiles -nostdlib -Wl,-nostdlib \


QMAKE_LFLAGS		+= -fno-exceptions -ffunction-sections -fdata-sections \
		          -Wl,-L/opt/tcb/arm-hardfloat-eabi/sysroot/usr/arm-hardfloat-eabi/lib \
                -static \
                $$COMMONFLAGS\

QMAKE_ASFLAGS		+= $$COMMONFLAGS fuck

linux-g++ {
     message(Linux)
}


QMAKE_LFLAGS_LIB  = \
                  $$PIC \

QMAKE_CFLAGS_LIB  =

# remove default which adds "-fPIC" which does not work on STM32
QMAKE_CFLAGS_STATIC_LIB  =

QMAKE_CFLAGS_SHLIB = asölkaölsdk


# QMAKE_LFLAGS		+= $$LINKER_SCRIPT_ARGUMENT
QMAKE_LFLAGS_APP	= $$LINKER_SCRIPT_ARGUMENT
QMAKE_LINKFLAGS		= --gc-sections -T$$LINKER_SCRIPT asd
QMAKE_CFLAGS_RELEASE	=
QMAKE_CFLAGS_DEBUG	=
QMAKE_LFLAGS_RELEASE	+=
QMAKE_LFLAGS_DEBUG	+=
QMAKE_CXXFLAGS_RELEASE	=
QMAKE_CXXFLAGS_DEBUG	=

load(qt_config)CONFIG

#-----------------------------------------------------------------------------
